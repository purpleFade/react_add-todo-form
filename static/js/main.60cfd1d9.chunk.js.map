{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","api/todos.ts","context/AppContext.tsx","utils/getUser.ts","App.tsx","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","classNames","completed","title","TodoList","todos","map","username","userId","defaultContextValues","query","setQuery","setUserId","visibleTodos","setVisibleTodos","inputError","setInputError","userError","setUserError","users","appContext","createContext","AppContextProvider","children","useState","todosFromServer","usersFromServer","useEffect","todosWithUsers","find","state","Provider","value","getUserFrom","allowedChars","App","useContext","action","method","onSubmit","e","preventDefault","trim","ids","newTodo","Math","max","type","onChange","target","test","placeholder","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.60cfd1d9.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n\n      <UserInfo user={todo.user || ({} as User)} />\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React, {\n  ReactNode, createContext, useEffect, useState,\n} from 'react';\n\nimport usersFromServer from '../api/users';\nimport todosFromServer from '../api/todos';\nimport { Todo } from '../types/Todo';\nimport { User } from '../types/User';\n\ntype Props = {\n  children: ReactNode;\n};\n\ntype AppContextType = {\n  query: string;\n  setQuery: React.Dispatch<React.SetStateAction<string>>;\n  userId: number;\n  setUserId: React.Dispatch<React.SetStateAction<number>>;\n  visibleTodos: Todo[];\n  setVisibleTodos: React.Dispatch<React.SetStateAction<Todo[]>>;\n  inputError: string;\n  setInputError: React.Dispatch<React.SetStateAction<string>>;\n  userError: string;\n  setUserError: React.Dispatch<React.SetStateAction<string>>;\n  users: User[];\n};\n\nconst defaultContextValues: AppContextType = {\n  query: '',\n  setQuery: () => null,\n  userId: 0,\n  setUserId: () => null,\n  visibleTodos: [],\n  setVisibleTodos: () => null,\n  inputError: '',\n  setInputError: () => null,\n  userError: '',\n  setUserError: () => null,\n  users: [],\n};\n\nexport const appContext = createContext<AppContextType>(defaultContextValues);\n\nexport const AppContextProvider: React.FC<Props> = ({ children }) => {\n  const [query, setQuery] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>(todosFromServer);\n  const [users] = useState(usersFromServer);\n  const [inputError, setInputError] = useState('');\n  const [userError, setUserError] = useState('');\n\n  useEffect(() => {\n    const todosWithUsers = visibleTodos.map((todo) => {\n      const todoWithUser: Todo = {\n        ...todo,\n        user: users.find((user) => user.id === todo.userId),\n      };\n\n      return todoWithUser;\n    });\n\n    setVisibleTodos(todosWithUsers);\n  }, []);\n\n  const state = {\n    query,\n    setQuery,\n    userId,\n    setUserId,\n    visibleTodos,\n    setVisibleTodos,\n    inputError,\n    setInputError,\n    users,\n    userError,\n    setUserError,\n  };\n\n  return <appContext.Provider value={state}>{children}</appContext.Provider>;\n};\n","import { User } from '../types/User';\n\nexport const getUserFrom = (userId: number, users: User[]) => {\n  return users.find((user) => user.id === userId);\n};\n","import React, { useContext } from 'react';\nimport { TodoList } from './components/TodoList';\n\nimport './App.scss';\n\nimport { appContext } from './context/AppContext';\nimport { getUserFrom } from './utils/getUser';\n\nconst allowedChars = /[а-яА-ЯІіЇїЄєҐґ'a-zA-Z0-9\\s]+/;\n\nexport const App = () => {\n  const {\n    query,\n    setQuery,\n    userId,\n    setUserId,\n    visibleTodos,\n    setVisibleTodos,\n    users,\n    userError,\n    setUserError,\n    inputError,\n    setInputError,\n  } = useContext(appContext);\n\n  const handleInputOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n\n    if (!allowedChars.test(value) && value !== '') {\n      return;\n    }\n\n    setQuery(value);\n    setInputError('');\n  };\n\n  const handleUserOnChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = e.target;\n\n    setUserId(+value);\n    setUserError('');\n  };\n\n  const handleSumbit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!query.trim()) {\n      setInputError('Please enter a title');\n    }\n\n    if (!userId) {\n      setUserError('Please choose a user');\n    }\n\n    if (!userId || !query.trim()) {\n      return;\n    }\n\n    const ids = visibleTodos.map((todo) => todo.id);\n\n    const newTodo = {\n      id: Math.max(...ids) + 1,\n      title: query,\n      userId: +userId,\n      completed: false,\n      user: getUserFrom(+userId, users),\n    };\n\n    setVisibleTodos([...visibleTodos, newTodo]);\n\n    setQuery('');\n    setUserId(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/todos\" method=\"POST\" onSubmit={handleSumbit}>\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              value={query}\n              onChange={handleInputOnChange}\n              placeholder=\"Enter a title\"\n            />\n          </label>\n          <span className=\"error\">{inputError}</span>\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              data-cy=\"userSelect\"\n              onChange={handleUserOnChange}\n              value={userId}\n            >\n              <option value=\"0\" disabled>\n                Choose a user\n              </option>\n              {users.map((user) => (\n                <option value={user.id} key={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          <span className=\"error\">{userError}</span>\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { AppContextProvider } from './context/AppContext';\n\nReactDOM.render(\n  <AppContextProvider>\n    <App />\n  </AppContextProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}